// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, compilacin R1)
// Generated source version: 1.1.3

package wsdl;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.client.SenderException;
import com.sun.xml.rpc.client.*;
import com.sun.xml.rpc.client.http.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;
import javax.xml.rpc.soap.SOAPFaultException;

public class IBPMServices_Stub
    extends com.sun.xml.rpc.client.StubBase
    implements wsdl.IBPMServices {
    
    
    
    /*
     *  public constructor
     */
    public IBPMServices_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://rndcws.mintransporte.gov.co:8080/ws/svr008w.dll/soap/IBPMServices");
    }
    
    
    /*
     *  implementation of atenderMensajeRNDC
     */
    public java.lang.String atenderMensajeRNDC(java.lang.String request)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(AtenderMensajeRNDC_OPCODE);
            wsdl.IBPMServices_AtenderMensajeRNDC_RequestStruct _myIBPMServices_AtenderMensajeRNDC_RequestStruct =
                new wsdl.IBPMServices_AtenderMensajeRNDC_RequestStruct();
            
            _myIBPMServices_AtenderMensajeRNDC_RequestStruct.setRequest(request);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_AtenderMensajeRNDC_AtenderMensajeRNDC_QNAME);
            _bodyBlock.setValue(_myIBPMServices_AtenderMensajeRNDC_RequestStruct);
            _bodyBlock.setSerializer(ns1_myIBPMServices_AtenderMensajeRNDC_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:BPMServicesIntf-IBPMServices#AtenderMensajeRNDC");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            wsdl.IBPMServices_AtenderMensajeRNDC_ResponseStruct _myIBPMServices_AtenderMensajeRNDC_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myIBPMServices_AtenderMensajeRNDC_ResponseStruct =
                    (wsdl.IBPMServices_AtenderMensajeRNDC_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myIBPMServices_AtenderMensajeRNDC_ResponseStruct =
                    (wsdl.IBPMServices_AtenderMensajeRNDC_ResponseStruct)_responseObj;
            }
            
            return _myIBPMServices_AtenderMensajeRNDC_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of atenderMensajeBPM
     */
    public java.lang.String atenderMensajeBPM(java.lang.String request)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(AtenderMensajeBPM_OPCODE);
            wsdl.IBPMServices_AtenderMensajeBPM_RequestStruct _myIBPMServices_AtenderMensajeBPM_RequestStruct =
                new wsdl.IBPMServices_AtenderMensajeBPM_RequestStruct();
            
            _myIBPMServices_AtenderMensajeBPM_RequestStruct.setRequest(request);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_AtenderMensajeBPM_AtenderMensajeBPM_QNAME);
            _bodyBlock.setValue(_myIBPMServices_AtenderMensajeBPM_RequestStruct);
            _bodyBlock.setSerializer(ns1_myIBPMServices_AtenderMensajeBPM_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:BPMServicesIntf-IBPMServices#AtenderMensajeBPM");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            wsdl.IBPMServices_AtenderMensajeBPM_ResponseStruct _myIBPMServices_AtenderMensajeBPM_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myIBPMServices_AtenderMensajeBPM_ResponseStruct =
                    (wsdl.IBPMServices_AtenderMensajeBPM_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myIBPMServices_AtenderMensajeBPM_ResponseStruct =
                    (wsdl.IBPMServices_AtenderMensajeBPM_ResponseStruct)_responseObj;
            }
            
            return _myIBPMServices_AtenderMensajeBPM_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case AtenderMensajeRNDC_OPCODE:
                _deserialize_AtenderMensajeRNDC(bodyReader, deserializationContext, state);
                break;
            case AtenderMensajeBPM_OPCODE:
                _deserialize_AtenderMensajeBPM(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the AtenderMensajeRNDC operation.
     */
    private void _deserialize_AtenderMensajeRNDC(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myIBPMServices_AtenderMensajeRNDC_ResponseStructObj =
            ns1_myIBPMServices_AtenderMensajeRNDC_ResponseStruct_SOAPSerializer.deserialize(ns1_AtenderMensajeRNDC_AtenderMensajeRNDCResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_AtenderMensajeRNDC_AtenderMensajeRNDCResponse_QNAME);
        bodyBlock.setValue(myIBPMServices_AtenderMensajeRNDC_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the AtenderMensajeBPM operation.
     */
    private void _deserialize_AtenderMensajeBPM(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myIBPMServices_AtenderMensajeBPM_ResponseStructObj =
            ns1_myIBPMServices_AtenderMensajeBPM_ResponseStruct_SOAPSerializer.deserialize(ns1_AtenderMensajeBPM_AtenderMensajeBPMResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_AtenderMensajeBPM_AtenderMensajeBPMResponse_QNAME);
        bodyBlock.setValue(myIBPMServices_AtenderMensajeBPM_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    
    
    public java.lang.String _getDefaultEnvelopeEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public java.lang.String _getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    public java.lang.String _getEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public void _setEncodingStyle(java.lang.String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }
    
    
    
    
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        ns1_myIBPMServices_AtenderMensajeBPM_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, wsdl.IBPMServices_AtenderMensajeBPM_ResponseStruct.class, ns1_AtenderMensajeBPMResponse_TYPE_QNAME);
        ns1_myIBPMServices_AtenderMensajeRNDC_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, wsdl.IBPMServices_AtenderMensajeRNDC_ResponseStruct.class, ns1_AtenderMensajeRNDCResponse_TYPE_QNAME);
        ns1_myIBPMServices_AtenderMensajeRNDC_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, wsdl.IBPMServices_AtenderMensajeRNDC_RequestStruct.class, ns1_AtenderMensajeRNDC_TYPE_QNAME);
        ns1_myIBPMServices_AtenderMensajeBPM_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, wsdl.IBPMServices_AtenderMensajeBPM_RequestStruct.class, ns1_AtenderMensajeBPM_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName _portName = new QName("http://tempuri.org/", "IBPMServicesPort");
    private static final int AtenderMensajeRNDC_OPCODE = 0;
    private static final int AtenderMensajeBPM_OPCODE = 1;
    private static final javax.xml.namespace.QName ns1_AtenderMensajeRNDC_AtenderMensajeRNDC_QNAME = new QName("urn:BPMServicesIntf-IBPMServices", "AtenderMensajeRNDC");
    private static final javax.xml.namespace.QName ns1_AtenderMensajeRNDC_TYPE_QNAME = new QName("urn:BPMServicesIntf-IBPMServices", "AtenderMensajeRNDC");
    private CombinedSerializer ns1_myIBPMServices_AtenderMensajeRNDC_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_AtenderMensajeRNDC_AtenderMensajeRNDCResponse_QNAME = new QName("urn:BPMServicesIntf-IBPMServices", "AtenderMensajeRNDCResponse");
    private static final javax.xml.namespace.QName ns1_AtenderMensajeRNDCResponse_TYPE_QNAME = new QName("urn:BPMServicesIntf-IBPMServices", "AtenderMensajeRNDCResponse");
    private CombinedSerializer ns1_myIBPMServices_AtenderMensajeRNDC_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_AtenderMensajeBPM_AtenderMensajeBPM_QNAME = new QName("urn:BPMServicesIntf-IBPMServices", "AtenderMensajeBPM");
    private static final javax.xml.namespace.QName ns1_AtenderMensajeBPM_TYPE_QNAME = new QName("urn:BPMServicesIntf-IBPMServices", "AtenderMensajeBPM");
    private CombinedSerializer ns1_myIBPMServices_AtenderMensajeBPM_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_AtenderMensajeBPM_AtenderMensajeBPMResponse_QNAME = new QName("urn:BPMServicesIntf-IBPMServices", "AtenderMensajeBPMResponse");
    private static final javax.xml.namespace.QName ns1_AtenderMensajeBPMResponse_TYPE_QNAME = new QName("urn:BPMServicesIntf-IBPMServices", "AtenderMensajeBPMResponse");
    private CombinedSerializer ns1_myIBPMServices_AtenderMensajeBPM_ResponseStruct_SOAPSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "urn:BPMServicesIntf-IBPMServices"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
